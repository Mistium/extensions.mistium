Scratch.translate.setup({fi:{_Skins:"Ulkoasu","_[ATTRIBUTE] of skin [NAME]":"ulkoasun [NAME] [ATTRIBUTE]","_create SVG skin [SVG] as [NAME]":"luo SVG-ulkoasu [SVG] nimellÃ¤ [NAME]","_current skin of [TARGET]":"hahmon [TARGET] nykyinen ulkoasu","_delete all skins":"poista kaikki ulkoasut","_delete skin [NAME]":"poista ulkoasu [NAME]",_height:"korkeus","_load skin from URL [URL] as [NAME]":"lataa ulkoasu URL-osoitteesta [URL] nimellÃ¤ [NAME]","_load skin from [COSTUME] as [NAME]":"lataa ulkoasu asusteesta [COSTUME] nimellÃ¤ [NAME]","_restore skin of [TARGET]":"palauta hahmon [TARGET] ulkoasu","_restore targets with skin [NAME]":"palauta ulkoasua [NAME] kÃ¤yttÃ¤vÃ¤t hahmot","_set skin of [TARGET] to [NAME]":"aseta hahmon [TARGET] ulkoasuksi [NAME]","_skin [NAME] is loaded?":"onko ulkoasu [NAME] ladattu? ",_width:"leveys"},it:{_Skins:"Altro Costumi Plus ",_height:"altezza",_width:"larghezza"},ja:{_Skins:"ã‚¹ã‚­ãƒ³",_height:"é«˜ã•",_width:"æ¨ªå¹…"},ko:{_Skins:"ìŠ¤í‚¨","_[ATTRIBUTE] of skin [NAME]":"ìŠ¤í‚¨ [NAME]ì˜ [ATTRIBUTE]","_create SVG skin [SVG] as [NAME]":"SVG ìŠ¤í‚¨ [NAME] ë§Œë“¤ê¸° [SVG] ","_current skin of [TARGET]":"í˜„ìž¬ ìŠ¤í‚¨ì˜ [TARGET]","_delete all skins":"ëª¨ë“  ìŠ¤í‚¨ ì‚­ì œí•˜ê¸°","_delete skin [NAME]":"ìŠ¤í‚¨ [NAME] ì‚­ì œí•˜ê¸°",_height:"ë†’ì´","_load skin from URL [URL] as [NAME]":"ìŠ¤í‚¨ [NAME]ì„(ë¥¼) URLì—ì„œ ë¶ˆëŸ¬ì˜¤ê¸° [URL]","_load skin from [COSTUME] as [NAME]":"ìŠ¤í‚¨ [NAME]ì„(ë¥¼) [COSTUME](ìœ¼)ë¡œ ë¶ˆëŸ¬ì˜¤ê¸°","_restore skin of [TARGET]":"[TARGET]ì˜ ìŠ¤í‚¨ ë³µêµ¬í•˜ê¸°","_set skin of [TARGET] to [NAME]":"[TARGET]ì˜ ìŠ¤í‚¨ì„ [NAME](ìœ¼)ë¡œ ì •í•˜ê¸°",_width:"ë„“ì´"},nb:{_Skins:"Skinner",_height:"hÃ¸yde",_width:"bredde"},nl:{"_[ATTRIBUTE] of skin [NAME]":"[ATTRIBUTE] van skin [NAME]","_create SVG skin [SVG] as [NAME]":"creÃ«er SVG-skin [SVG] als [NAME]","_current skin of [TARGET]":"huidige skin van [TARGET]","_delete all skins":"verwijder alle skins","_delete skin [NAME]":"verwijder skin [NAME]",_height:"hoogte","_load skin from URL [URL] as [NAME]":"laad skin van URL [URL] als [NAME]","_load skin from [COSTUME] as [NAME]":"laad skin van [COSTUME] als [NAME]","_restore skin of [TARGET]":"herstel skin van [TARGET]","_restore targets with skin [NAME]":"herstel alle met skin [NAME]","_set skin of [TARGET] to [NAME]":"maak skin van [TARGET] [NAME]","_skin [NAME] is loaded?":"skin [NAME] is geladen?",_width:"breedte"},pl:{_height:"wysokoÅ›Ä‡",_width:"szerokoÅ›Ä‡"},ru:{_Skins:"Ð¡ÐºÐ¸Ð½Ñ‹","_[ATTRIBUTE] of skin [NAME]":"[ATTRIBUTE] ÑÐºÐ¸Ð½Ð° [NAME]","_create SVG skin [SVG] as [NAME]":"ÑÐ¾Ð·Ð´Ð°Ñ‚ÑŒ SVG ÑÐºÐ¸Ð½ [SVG] ÐºÐ°Ðº [NAME]","_current skin of [TARGET]":"Ñ‚ÐµÐºÑƒÑ‰Ð¸Ð¹ ÑÐºÐ¸Ð½ [TARGET]","_delete all skins":"ÑƒÐ´Ð°Ð»Ð¸Ñ‚ÑŒ Ð²ÑÐµ ÑÐºÐ¸Ð½Ñ‹","_delete skin [NAME]":"ÑƒÐ´Ð°Ð»Ð¸Ñ‚ÑŒ ÑÐºÐ¸Ð½ [NAME]",_height:"Ð²Ñ‹ÑÐ¾Ñ‚Ð°","_load skin from URL [URL] as [NAME]":"Ð·Ð°Ð³Ñ€ÑƒÐ·Ð¸Ñ‚ÑŒ ÑÐºÐ¸Ð½ Ð¸Ð· URL [URL] ÐºÐ°Ðº [NAME]","_load skin from [COSTUME] as [NAME]":"Ð·Ð°Ð³Ñ€ÑƒÐ·Ð¸Ñ‚ÑŒ ÑÐºÐ¸Ð½ Ð¸Ð· [COSTUME] ÐºÐ°Ðº [NAME]","_restore skin of [TARGET]":"Ð²Ð¾ÑÑÑ‚Ð°Ð½Ð¾Ð²Ð¸Ñ‚ÑŒ ÑÐºÐ¸Ð½ [TARGET]","_restore targets with skin [NAME]":"Ð²Ð¾ÑÑÑ‚Ð°Ð½Ð¾Ð²Ð¸Ñ‚ÑŒ Ñ†ÐµÐ»Ð¸ ÑÐ¾ ÑÐºÐ¸Ð½Ð¾Ð¼ [NAME]","_set skin of [TARGET] to [NAME]":"Ð·Ð°Ð´Ð°Ñ‚ÑŒ ÑÐºÐ¸Ð½ [TARGET] Ð½Ð° [NAME]","_skin [NAME] is loaded?":"ÑÐºÐ¸Ð½ [NAME] Ð·Ð°Ð³Ñ€ÑƒÐ¶ÐµÐ½?",_width:"ÑˆÐ¸Ñ€Ð¸Ð½Ð°"},tr:{_Skins:"Ciltler"},uk:{_Skins:"Ð¡ÐºÑ–Ð½Ð¸",_height:"Ð²Ð¸ÑÐ¾Ñ‚Ð°",_width:"ÑˆÐ¸Ñ€Ð¸Ð½Ð°"},"zh-cn":{_Skins:"çº¹ç†","_[ATTRIBUTE] of skin [NAME]":"çº¹ç†[NAME]çš„[ATTRIBUTE]","_create SVG skin [SVG] as [NAME]":"åˆ›å»ºSVGçº¹ç†[SVG]å¹¶å‘½åä¸º[NAME]","_current skin of [TARGET]":"[TARGET]çš„å½“å‰çº¹ç†","_delete all skins":"åˆ é™¤æ‰€æœ‰çº¹ç†","_delete skin [NAME]":"åˆ é™¤çº¹ç†[NAME]",_height:"é«˜åº¦","_load skin from URL [URL] as [NAME]":"ä»ŽURL[URL]åŠ è½½çº¹ç†å¹¶å‘½åä¸º[NAME]","_load skin from [COSTUME] as [NAME]":"ä»Ž[COSTUME]åŠ è½½çº¹ç†å¹¶å‘½åä¸º[NAME]","_restore skin of [TARGET]":"æ¢å¤[TARGET]çš„çº¹ç†ä¸ºåŽŸé€ åž‹","_restore targets with skin [NAME]":"æ¢å¤æ‰€æœ‰çº¹ç†ä¸º[NAME]çš„è§’è‰²é€ åž‹","_set skin of [TARGET] to [NAME]":"å°†[TARGET]çš„çº¹ç†è®¾ä¸º[NAME]","_skin [NAME] is loaded?":"çº¹ç†[NAME]å·²åŠ è½½ï¼Ÿ",_width:"å®½åº¦"}}),function(e){"use strict";const t=e.vm.runtime,s=t.renderer,n=e.Cast;var r=[],a=[];e.extensions.register(new class{constructor(){t.on("PROJECT_START",(()=>{this._refreshTargets()})),t.on("PROJECT_STOP_ALL",(()=>{this._refreshTargets()}))}getInfo(){return{id:"mistSkins",name:e.translate("Skins"),color1:"#ff69b4",color2:"#ff5cae",color3:"#ff4fa8",docsURI:"https://extensions.turbowarp.org/Lily/Skins",blocks:[{opcode:"registerSVGSkin",blockType:e.BlockType.COMMAND,text:e.translate("create SVG skin [SVG] as [NAME]"),arguments:{SVG:{type:e.ArgumentType.STRING,defaultValue:"<svg />"},NAME:{type:e.ArgumentType.STRING,defaultValue:"my skin"}}},"---",{opcode:"registerCostumeSkin",blockType:e.BlockType.COMMAND,text:e.translate("load skin from [COSTUME] as [NAME]"),arguments:{COSTUME:{type:e.ArgumentType.COSTUME},NAME:{type:e.ArgumentType.STRING,defaultValue:"my skin"}}},{opcode:"registerURLSkin",blockType:e.BlockType.COMMAND,text:e.translate("load skin from URL [URL] as [NAME]"),arguments:{URL:{type:e.ArgumentType.STRING,defaultValue:"https://extensions.turbowarp.org/dango.png"},NAME:{type:e.ArgumentType.STRING,defaultValue:"my skin"}}},{opcode:"getSkinLoaded",blockType:e.BlockType.BOOLEAN,text:e.translate("skin [NAME] is loaded?"),arguments:{NAME:{type:e.ArgumentType.STRING,defaultValue:"my skin"}}},{opcode:"getSkinLoading",blockType:e.BlockType.BOOLEAN,text:e.translate("skin [NAME] is loading?"),arguments:{NAME:{type:e.ArgumentType.STRING,defaultValue:"my skin"}}},{opcode:"getSkins",blockType:e.BlockType.REPORTER,text:e.translate("get all skins")},"---",{opcode:"setSkin",blockType:e.BlockType.COMMAND,text:e.translate("set skin of [TARGET] to [NAME]"),arguments:{TARGET:{type:e.ArgumentType.STRING,menu:"targetMenu"},NAME:{type:e.ArgumentType.STRING,defaultValue:"my skin"}}},{opcode:"restoreSkin",blockType:e.BlockType.COMMAND,text:e.translate("restore skin of [TARGET]"),arguments:{TARGET:{type:e.ArgumentType.STRING,menu:"targetMenu"}}},{opcode:"restoreTargets",blockType:e.BlockType.COMMAND,text:e.translate("restore targets with skin [NAME]"),arguments:{NAME:{type:e.ArgumentType.STRING,defaultValue:"my skin"}}},"---",{opcode:"getCurrentSkin",blockType:e.BlockType.REPORTER,text:e.translate("current skin of [TARGET]"),arguments:{TARGET:{type:e.ArgumentType.STRING,menu:"targetMenu"}}},{opcode:"getSkinAttribute",blockType:e.BlockType.REPORTER,text:e.translate("[ATTRIBUTE] of skin [NAME]"),arguments:{ATTRIBUTE:{type:e.ArgumentType.STRING,menu:"skinAttributes"},NAME:{type:e.ArgumentType.STRING,defaultValue:"my skin"}}},"---",{opcode:"deleteSkin",blockType:e.BlockType.COMMAND,text:e.translate("delete skin [NAME]"),arguments:{NAME:{type:e.ArgumentType.STRING,defaultValue:"my skin"}}},{opcode:"deleteAllSkins",blockType:e.BlockType.COMMAND,text:e.translate("delete all skins")}],menus:{targetMenu:{acceptReporters:!0,items:"_getTargets"},skinAttributes:{acceptReporters:!0,items:[{text:e.translate("width"),value:"width"},{text:e.translate("height"),value:"height"}]}}}}async registerSVGSkin(e){const t=`lms-${n.toString(e.NAME)}`,a=n.toString(e.SVG);let i=null;r[t]&&(i=r[t]);const o=s.createSVGSkin(a);var l;r[t]=o,await(l=s._allSkins[o],void new Promise((e=>{l._svgImageLoaded?e():(l._svgImage.addEventListener("load",(()=>{e()})),l._svgImage.addEventListener("error",(()=>{e()})))}))),i&&(this._refreshTargetsFromID(i,!1,o),s.destroySkin(i))}async registerCostumeSkin(t,a){if(i="add costume skin",e.vm.runtime.isPackaged&&(alert(`To use the Skins ${i} block, the creator of the packaged project must uncheck "Remove raw asset data after loading to save RAM" under advanced settings in the packager.`),1))return;var i;const o=`lms-${n.toString(t.NAME)}`,l=a.target.getCostumeIndexByName(t.COSTUME);if(-1===l)return;const T=a.target.sprite.costumes[l],k=T.asset.encodeDataURI(),A=T.rotationCenterX,E=T.rotationCenterY;let u=[A,E];A&&E||(u=null);let g=null;r[o]&&(g=r[o]);const c=await this._createURLSkin(k,u);r[o]=c,g&&(this._refreshTargetsFromID(g,!1,c),s.destroySkin(g))}registerURLSkin(e){const t=`lms-${n.toString(e.NAME)}`,i=n.toString(e.URL);let o=null;r[t]&&(o=r[t]),a.push(t),this._createURLSkin(i).then((e=>{a=a.filter((e=>e!==t)),e&&(r[t]=e,o&&(this._refreshTargetsFromID(o,!1,e),s.destroySkin(o)))}))}getSkinLoaded(e){const t=`lms-${n.toString(e.NAME)}`;return!!r[t]}getSkinLoading(e){const t=`lms-${n.toString(e.NAME)}`;return a.includes(t)}getSkins(){return JSON.stringify(Object.keys(r).map((e=>e.replace(/^lms\-/,""))))}setSkin(e,t){const a=`lms-${n.toString(e.NAME)}`;if(!r[a])return;const i=n.toString(e.TARGET),o=this._getTargetFromMenu(i,t);if(!o)return;const l=o.drawableID,T=r[a];s._allDrawables[l].skin=s._allSkins[T]}restoreSkin(e,t){const s=n.toString(e.TARGET),r=this._getTargetFromMenu(s,t);r&&r.updateAllDrawableProperties()}getCurrentSkin(e,t){const r=n.toString(e.TARGET),a=this._getTargetFromMenu(r,t);if(!a)return;const i=a.drawableID,o=s._allDrawables[i].skin._id,l=this._getSkinNameFromID(o);return l?l.replace("lms-",""):""}getSkinAttribute(e){const t=s._allSkins,a=`lms-${n.toString(e.NAME)}`;if(!r[a])return 0;const i=r[a];if(!t[i])return 0;const o=t[i].size;switch(n.toString(e.ATTRIBUTE).toLowerCase()){case"width":return Math.ceil(o[0]);case"height":return Math.ceil(o[1]);default:return 0}}deleteSkin(e){const t=`lms-${n.toString(e.NAME)}`;if(!r[t])return;const a=r[t];this._refreshTargetsFromID(a,!0),s.destroySkin(a),Reflect.deleteProperty(r,t)}deleteAllSkins(){this._refreshTargets();for(const e in r){const t=r[e];s.destroySkin(t),Reflect.deleteProperty(r,e)}a=[],r=[]}restoreTargets(e){const t=`lms-${n.toString(e.NAME)}`;if(!r[t])return;const s=r[t];this._refreshTargetsFromID(s,!0)}_refreshTargetsFromID(e,n,r){const a=s._allDrawables,i=s._allSkins;for(const s of t.targets){const t=s.drawableID;a[t].skin.id===e&&(s.updateAllDrawableProperties(),n||(a[t].skin=r?i[r]:i[e]))}}_refreshTargets(){for(const e of t.targets)e.updateAllDrawableProperties()}_getSkinNameFromID(e){for(const t in r)if(r[t]===e)return t}_getTargetFromMenu(s,n){let r=e.vm.runtime.getSpriteTargetByName(s);return"_myself_"===s&&(r=n.target),"_stage_"===s&&(r=t.getTargetForStage()),r}async _createURLSkin(t,n){let r;if(!await e.canFetch(t))return;r=await e.fetch(t);const a=r.headers.get("Content-Type");if("image/svg+xml"===a)return s.createSVGSkin(await r.text(),n);if("image/png"===a||"image/jpeg"===a||"image/bmp"===a){const e=new Image;return e.src=t,e.crossOrigin="anonymous",await e.decode(),s.createBitmapSkin(e)}}_getTargets(){const t=[{text:"myself",value:"_myself_"},{text:"Stage",value:"_stage_"}],s=e.vm.runtime.targets;for(let e=1;e<s.length;e++){const n=s[e];if(n.isOriginal){const e=n.getName();t.push({text:e,value:e})}}return t}})}(Scratch);
