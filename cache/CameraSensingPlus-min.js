// This extension by Sharkpool has been minified and modified by "Mistium" to remove code that goes unused within originOS
// DO NOT USE THIS
// Go here: https://sharkpool-sp.github.io/SharkPools-Extensions/

!function(e){"use strict";if(!e.extensions.unsandboxed)throw new Error("Camera Sensing+ must run unsandboxed");const t=e.vm,a=t.runtime;e.vm.extensionManager.isExtensionLoaded("videoSensing")||a.extensionManager.loadExtensionIdSync("videoSensing");const i=document.createElement("canvas");let o=!1;!function(){const e=navigator.userAgent;o=/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(e)}();let n=!0,s=-1;e.extensions.register(new class{constructor(){this.camSize=[640,480],this.cutSize=[0,0],this.camStyle="user",this.scale=100,this.cutoutDir=90,this.softness=10}getInfo(){return{id:"CameraSensingPlusSP",name:"Camera Sensing+",color1:"#00b2a4",blocks:[{blockType:e.BlockType.XML,xml:'<sep gap="-10"/><label text="Video Sensing Compatible"/><sep gap="-12"/><sep gap="12"/>'},{opcode:"vidStatus",blockType:e.BlockType.BOOLEAN,extensions:["colours_pen"],text:"is video on?"},{opcode:"videoTarget",blockType:e.BlockType.COMMAND,extensions:["colours_pen"],text:"toggle video on [TARGET] [ON_OFF]",arguments:{ON_OFF:{type:e.ArgumentType.STRING,menu:"onOffMenu"},TARGET:{type:e.ArgumentType.STRING,menu:"targets"}}},{opcode:"captureVideo",blockType:e.BlockType.REPORTER,extensions:["colours_pen"],text:"video frame data.URI",disableMonitor:!0},{blockType:e.BlockType.LABEL,text:"Non-Compatible:"},{blockType:e.BlockType.XML,xml:'<sep gap="-10"/><label text="Camera Feed"/><sep gap="-12"/><sep gap="12"/>'},{opcode:"turnOnCamera",blockType:e.BlockType.COMMAND,text:"turn camera [ON_OFF]",arguments:{ON_OFF:{type:e.ArgumentType.STRING,menu:"onOffMenu"}}},{opcode:"captureWebcamFootage",blockType:e.BlockType.REPORTER,text:"camera frame data.URI",disableMonitor:!0},{opcode:"useCam",blockType:e.BlockType.COMMAND,text:"use [TYPE] camera",arguments:{TYPE:{type:e.ArgumentType.STRING,menu:"frontBack"}}},{opcode:"camStatus",blockType:e.BlockType.BOOLEAN,text:"is camera on?"},{opcode:"hasBack",blockType:e.BlockType.BOOLEAN,text:"has back camera?"},"---",{opcode:"setResolution",blockType:e.BlockType.COMMAND,text:"set camera resolution to width [WIDTH] and height [HEIGHT]",arguments:{WIDTH:{type:e.ArgumentType.NUMBER,defaultValue:640},HEIGHT:{type:e.ArgumentType.NUMBER,defaultValue:480}}},{opcode:"defaultRes",blockType:e.BlockType.REPORTER,text:"default camera [W_H]",disableMonitor:!0,arguments:{W_H:{type:e.ArgumentType.STRING,menu:"widthHeight"}}},{opcode:"currentRes",blockType:e.BlockType.REPORTER,text:"current camera [W_H]",disableMonitor:!0,arguments:{W_H:{type:e.ArgumentType.STRING,menu:"widthHeight"}}}],menus:{onOffMenu:["on","off"],widthHeight:["width","height"],positions:["x","y"],frontBack:[{text:"front",value:"user"},{text:"back",value:"environment"}],targets:{acceptReporters:!0,items:"getTargets"}}}}enableLegacy(){n=!1,t.extensionManager.refreshBlocks()}getTargets(){const t=[];t.push({text:"myself",value:"_myself_"}),t.push({text:"Stage",value:"_stage_"});const a=e.vm.runtime.targets;for(let e=1;e<a.length;e++){const i=a[e];i.isOriginal&&t.push({text:i.getName(),value:i.getName()})}return t.length>0?t:[""]}printCapture(){if(this.videoElement){i.width=Math.abs(e.Cast.toNumber(this.camSize[0])),i.height=Math.abs(e.Cast.toNumber(this.camSize[1]));const t=i.getContext("2d");return this.camSize[0]<0&&(t.translate(i.width,0),t.scale(-1,1)),this.camSize[1]<0&&(t.translate(0,i.height),t.scale(1,-1)),t.drawImage(this.videoElement,0,0,i.width,i.height),i.toDataURL("image/png")}return""}vidStatus(){return a.ioDevices.video.videoReady}videoTarget(e,i){let o="_myself_"===e.TARGET?i.target:a.getSpriteTargetByName(e.TARGET);if(o||"_stage_"===e.TARGET)if(-1===s&&(s=t.runtime.ioDevices.video._drawable),"_stage_"===e.TARGET){const a=t.renderer._allDrawables[s];a&&a.updateVisible("on"===e.ON_OFF)}else{const i=t.renderer._allDrawables[o.drawableID];if(void 0===i.ogSkin&&(i.ogSkin=i._skin._id),"on"===e.ON_OFF)i._skin=t.renderer._allSkins[a.ioDevices.video._skinId];else{i._skin=t.renderer._allSkins[i.ogSkin],o.updateAllDrawableProperties();const e=o.size;o.setSize(-1),o.setSize(e)}}}captureVideo(){const e=a.ioDevices.video.getFrame({}),t=document.createElement("canvas"),i=t.getContext("2d");return t.width=e.width,t.height=e.height,i.putImageData(e,0,0),t.toDataURL()}async turnOnCamera(e){if("on"===e.ON_OFF){if(!this.mediaStream)try{this.mediaStream="",this.mediaStream=o?await navigator.mediaDevices.getUserMedia({video:{facingMode:{exact:this.camStyle}}}):await navigator.mediaDevices.getUserMedia({video:!0}),this.videoElement=document.createElement("video"),this.videoElement.srcObject=this.mediaStream,this.videoElement.play()}catch(e){console.error("Error accessing the camera:",e)}}else this.mediaStream&&(this.mediaStream.getTracks().forEach((e=>e.stop())),this.videoElement.remove(),this.videoElement=null,this.mediaStream=null)}async useCam(e){o?(await this.turnOnCamera({ON_OFF:"off"}),this.camStyle=e.TYPE,await this.turnOnCamera({ON_OFF:"on"})):console.warn("Process Denied, Camera has no Front/Back")}setResolution(t){this.camSize=[e.Cast.toNumber(t.WIDTH),e.Cast.toNumber(t.HEIGHT)]}defaultRes(e){return this.videoElement&&this.mediaStream?this.videoElement["width"===e.W_H?"videoWidth":"videoHeight"]:"camera is not on"}currentRes(e){return this.camSize["width"===e.W_H?0:1]}camStatus(){return e.Cast.toBoolean(this.videoElement||this.mediaStream)}hasBack(){return o}captureWebcamFootage(){return this.videoElement?this.printCapture():"Camera is Off"}})}(Scratch);
